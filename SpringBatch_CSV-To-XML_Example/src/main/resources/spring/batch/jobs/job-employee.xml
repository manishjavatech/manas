<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"

	xsi:schemaLocation="http://www.springframework.org/schema/batch
							http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
							http://www.springframework.org/schema/beans 
							http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
							http://www.springframework.org/schema/util
							http://www.springframework.org/schema/util/spring-util-3.2.xsd ">

	<import resource="../config/context.xml" />
	<import resource="../config/database.xml" />

	<bean id="employee" class="com.manas.model.Employee" scope="prototype" />
	<bean id="itemProcessor" class="com.manas.EmployeeItemProcessor" />

	<batch:job id="employeeJob">
		<batch:step id="step1">
			<batch:tasklet>
				<batch:chunk reader="cvsFileItemReader" writer="xmlItemWriter"
					processor="itemProcessor" commit-interval="10">
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<bean id="cvsFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">

		<property name="resource" value="classpath:cvs/input/employee.csv" />

		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="id,name,salary,exprience,joiningDate" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="com.manas.EmployeeFieldSetMapper" />

					<!-- if no data type conversion, use BeanWrapperFieldSetMapper to map 
						by name <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper"> 
						<property name="prototypeBeanName" value="employee" /> </bean> -->
				</property>
			</bean>
		</property>
	</bean>

	<bean id="xmlItemWriter" class="org.springframework.batch.item.xml.StaxEventItemWriter">
		<property name="resource" value="file:xml/outputs/employee.xml" />
		<property name="marshaller" ref="employeeMarshaller" />
		<property name="overwriteOutput" value="true" />
		<property name="rootTagName" value="employees" />
	</bean>

	<bean id="employeeMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="classesToBeBound">
			<list>
				<value>com.manas.model.Employee</value>
			</list>
		</property>
		<property name="marshallerProperties">
			<map>
				<entry>
					<key>
						<util:constant static-field="javax.xml.bind.Marshaller.JAXB_FORMATTED_OUTPUT"></util:constant>
					</key>
					<value type="java.lang.Boolean">true</value>
				</entry>
			</map>
		</property>
		<!-- <property name="marshallerProperties">
			<map>
				<entry key="jaxb.formatted.output">
					<value type="boolean">true</value>
				</entry>
			</map>
		</property> -->
	</bean>

</beans>